Создание модели.

I. Модель
    1. Создаём в папке вашего модуля папку models
    2. В ней создаём класс с именем будущей модели. Обязательно с заглавной буквы. Имя класса должно отталкиваться от имени таблицы.
    Таблицы назваются во множественном числе, модели - в единственном. underscore-стиль названия таблиц заменяется camelCase названием модели.
    3. Название класса должно совпадать с именем файла
    4. Наследуемся от system\core\Model.
    5. Важно прописать правильный namespace - "namespace webapp\modules\ваш_модуль\models", где model - папка с моделью.
    Это общее правило построения системы - namespace's строятся по расположению файла.
    6. Обязательное поле - public static $table = 'название таблицы в БД';
    7. Желательное поле - protected static $table_fields = [
                                'id',
                                'user_id',
                                'module',
                                'name',
                                'date_created',
                            ];
       где в массиве перечисляем все столбцы вашей таблицы

    8. Модель готова!

    Пример модели: system\webapp\modules\comments\model\Comments.php

II. Использование ORM
    1. После того, как модель создана, вы можете через неё образаться к методам ORM
    2. Примеры:
        YourModel::factory()->where('name', 'Igor')->findMany(); - найдёт все записи, где name = 'Igor' и вернёт объект
        YourModel::factory()->where(['name'=>'Igor', 'sex'=>'male'])->findArray(); - найдёт все записи, где name = 'Igor', 'sex'='male' и вернёт массив


        Создание и сохранение записей.
        $data = ['name'=>'Igor', 'age'=>'66'];
        YourModel::factory()->create($data)->save();

         Изменение записей.
         $model = YourModel::factory()->where(['name'=>'Igor'])->finOne(); - находим единственную запись, для этого используем findOne()
         $model->name = 'Vladislav';                         - записываем новое зачение
         $model->save();                                     - сохраняем!



